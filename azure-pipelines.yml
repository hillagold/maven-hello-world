# Starter pipeline
trigger:
- dependabot/maven/my-app/junit-junit-4.13.1

pool:
  vmImage: 'ubuntu-18.04'

steps:
- task: Maven@2
  inputs:
    mavenPomFile: 'my-app/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    mavenFeedAuthenticate: true
    goals: 'package'
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(agent.builddirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
# - task: Docker@2
#   inputs:
#     repository: 'hillagold/myrepo'
#     command: 'buildAndPush'
#     Dockerfile: '**/Dockerfile'
- task: Docker@2
  inputs:
    containerRegistry: 'dockerhub'
    repository: 'hillagold/myrepo'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
- task: Docker@2
  inputs:
    containerRegistry: 'dockerhub'
    command: 'start'
    container: 'maven-hello-world'
# - task: Docker@2
#   inputs:
#     command: 'buildAndPush'
#     Dockerfile: '**/Dockerfile'

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# - script: 
#     mvn clean package
#   displayName: 'clean package'

# - script: 
#     echo find mvn 
#     mvn help:evaluate -Dexpression=settings.localRepository
#   displayName: 'finding setting.xml'
  
# - script: 
#     echo compiling
#     mvn compile
#   displayName: 'Compile'

# - script: 
#     echo Starting the build
#     mvn package
#     java -cp target/classes com.mycompany.app.App
#   displayName: 'Build with Maven'

# - script: 
#     echo install
#     mvn install
#   displayName: 'Installing'
  
# - script: 
#     echo Deployig mvn
#     mvn deploy
#   displayName: 'Deploying Maven'

